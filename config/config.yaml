# === anti-echo-chamber project config (v4: dual-model stance system, FLAN-T5 + BART, CUDA 12.1) ===
version: 4

# === Hugging Face dataset for artifact storage ===
hf_dataset_id: "zanimal/anti-echo-artifacts"

# === Local Chroma collections ===
chroma_collections:
  topic: "news_topic"
  stance: "news_stance"

# === Embedding models ===
embeddings:
  topic_model: "intfloat/e5-base-v2"                 # strong topic model (dense retrieval)
  stance_model: "Snowflake/snowflake-arctic-embed-l" # ideology-aware stance encoder
  dim: 1024                                          # stance embedding dimensionality
  dtype: "float16"                                   # efficient precision for Chroma
  pooling: "mean"
  chunk_tokens: 512
  normalize: true

# === Topic inference ===
topics:
  source: "https://raw.githubusercontent.com/AHMerrill/anti-echo-chamber/main/config/topics.json"
  max_topics_per_article: 5
  similarity_threshold: 0.4

# === Stance inference pipeline (dual-model hybrid) ===
stance_processing:
  mode: "dual-model-hybrid"                          # FLAN for classification, BART for summary
  variants: ["label", "summary"]                     # two stance representations per article

  # --- Stage 1: Ideological classification (FLAN-T5) ---
  classifier:
    model: "google/flan-t5-large"                    # instruction-tuned for discrete label control
    max_tokens: 1024
    truncation: 2500                                 # short window for efficiency
    output_lines: 2                                  # political leaning + implied stance
    ideological_guidance:
      political_leanings: "https://raw.githubusercontent.com/AHMerrill/anti-echo-chamber/main/config/political_leanings.json"
      implied_stances: "https://raw.githubusercontent.com/AHMerrill/anti-echo-chamber/main/config/implied_stances.json"
    prompt_style:
      type: "categorical"
      description: >
        FLAN-T5 generates exactly two lines: the author's implied political
        leaning and stance, selected from predefined JSON anchor lists.

  # --- Stage 2: Rhetorical summarization (BART) ---
  summarizer:
    model: "facebook/bart-large-cnn"                 # fluent abstractive summarizer
    target_sentences: 1                              # one-sentence summary of article argument
    max_input_chars: 3000
    do_sample: false
    description: >
      Produces one concise, natural-sounding sentence summarizing the article's
      argument, tone, or worldview without explicit labeling.

  # --- Stage 3: Hybrid embedding configuration ---
  hybrid_embedding:
    concatenate_order: ["political_leaning", "implied_stance", "summary"]
    max_length_chars: 4096
    description: >
      Concatenates ideological classification and single-sentence summary into
      one text block for stance embeddings. Captures both structured worldview
      and rhetorical framing for high-contrast cosine retrieval.

# === Batch artifact management ===
batch:
  base_dir: "batches"
  manifest_name: "manifest.json"
  topic_file: "embeddings_topic.npz"
  stance_file: "embeddings_stance.npz"
  metadata_file: "metadata.jsonl"
  compress: true
  dtype: "float16"
  hf_push: true                                      # push processed batches to HF dataset

# === Identifier and hashing scheme ===
ids:
  scheme: "domain-slug-sha12"
  hash: "sha256"
  normalize_whitespace: true
  lowercase: true
  include_timestamp: true

# === Chroma persistence and similarity metric ===
chroma:
  dir: "chroma_db"
  distance_metric: "cosine"
  rebuild_if_missing: true

# === Logging, diagnostics, and recovery ===
logging:
  level: "INFO"
  save_dir: "logs"
  record_failures: true
  checkpoint_interval: 100

# === Diagnostics and validation ===
diagnostics:
  validate_embeddings: true
  sample_summary_preview: true
  max_preview_chars: 500
  verify_stance_variants: true                       # ensure both label and summary vectors exist
  check_json_integrity: true                         # confirm ideological JSONs load correctly
  verify_dual_model: true                            # confirm both FLAN and BART stages executed
